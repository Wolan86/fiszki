---
import Layout from '@/layouts/Layout.astro';
import { LoginForm } from '@/components/auth/LoginForm';

// Sprawdzenie czy użytkownik jest już zalogowany
const user = Astro.locals.user;
if (user) {
  return Astro.redirect('/kreator');
}

// Sprawdzenie czy użytkownik został przekierowany po rejestracji
const registered = Astro.url.searchParams.get('registered') === 'true';

// Ustawienie prerender na false, aby strona była renderowana na serwerze
export const prerender = false;
---

<Layout title="Logowanie | Fiszki">
  <div class="container mx-auto py-16 px-4">
    <div class="max-w-md mx-auto">
      <h1 class="text-3xl font-bold text-center mb-8">Logowanie</h1>
      
      {registered && (
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
          <span class="block sm:inline">Rejestracja zakończona pomyślnie! Możesz się teraz zalogować.</span>
        </div>
      )}
      
      <LoginForm 
        client:load 
        isLoading={false}
      />
    </div>
  </div>
</Layout>

<script>
  // Client-side handling of the login
  document.addEventListener('DOMContentLoaded', () => {
    const loginForm = document.querySelector('form');
    
    if (loginForm) {
      loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const emailInput = document.querySelector('#email') as HTMLInputElement;
        const passwordInput = document.querySelector('#password') as HTMLInputElement;
        
        if (!emailInput || !passwordInput) {
          console.error('Form inputs not found');
          return;
        }
        
        const email = emailInput.value;
        const password = passwordInput.value;
        
        try {
          const submitButton = loginForm.querySelector('button[type="submit"]') as HTMLButtonElement;
          if (submitButton) {
            submitButton.disabled = true;
            submitButton.textContent = "Logowanie...";
          }
          
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password }),
          });
          
          const data = await response.json();
          
          if (!response.ok) {
            throw new Error(data.error || 'Niepoprawny email lub hasło');
          }
          
          // Przekierowanie po udanym logowaniu
          window.location.href = '/kreator';
        } catch (error) {
          console.error('Login error:', error);
          alert(error instanceof Error ? error.message : 'Wystąpił błąd podczas logowania');
          
          // Re-enable the button
          const submitButton = loginForm.querySelector('button[type="submit"]') as HTMLButtonElement;
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = "Zaloguj się";
          }
        }
      });
    }
  });
</script> 